@app_port = {{$dotenv APP_PORT}}

######################
### Determines if "smallRect" is contained by "bigRect".
### Not contained: "smallRect" is above "bigRect"

POST http://localhost:{{app_port}}/api/v1/containment
Content-Type: application/json

{
  "bigRect": {
    "x1": 45,
    "y1": 35,
    "x2": 120,
    "y2": 70
  },
  "smallRect": {
    "x1": 10,
    "y1": 75,
    "x2": 90,
    "y2": 165
  }
}

######################
### Throw error: "Invalid object in the payload"

POST http://localhost:{{app_port}}/api/v1/containment
Content-Type: application/json

{
  "bigRect": {
    "x1": 45,
    "y1": 35,
    "x2": 120,
    "y2": 70
  },
  "smallRect": null
}

######################
### Gets the coordinates of the adjacency between two rectangles.
### No adjacent lines: "rect2" above "rect1"

POST http://localhost:{{app_port}}/api/v1/adjacency
Content-Type: application/json

{
  "rect1": {
    "x1": 45,
    "y1": 35,
    "x2": 120,
    "y2": 70
  },
  "rect2": {
    "x1": 10,
    "y1": 75,
    "x2": 90,
    "y2": 165
  }
}

######################
### Gets the new Rectangle of the intersection between 2 rectangles.
### No intersection: is adjacent, not overlapping

POST http://localhost:{{app_port}}/api/v1/intersection
Content-Type: application/json

{
  "rect1": {
    "x1": 90,
    "y1": 40,
    "x2": 110,
    "y2": 50
  },
  "rect2": {
    "x1": 10,
    "y1": 5,
    "x2": 90,
    "y2": 65
  }
}
